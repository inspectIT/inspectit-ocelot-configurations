# Currently, If we run into an error, (e.g. the remote service is not reachable) and we get a 500 back,
# the traces are not connected
inspectit:
  instrumentation:
    rules:
      'r_java_http_client_tracing':
        docs:
          since: '1.2.1'
          description: 'Enables tracing of Java HTTP Client calls.'
        default-rule: true
        include:
          'r_java_http_client_extract_details': true
          'r_http_tracing_span_name_default': true
          'r_http_client_tracing_default_attributes': true
        scopes:
          's_http_client_send_methods': true
        pre-entry:
          'write_headers':
            action: 'a_httpClient_addContextHeaders'
        tracing:
          start-span: true
          auto-tracing: false
          kind: CLIENT
          start-span-conditions:
            only-if-true: 'http_is_entry'
          error-status: 'http_is_error'
      
      # Cause we´ve got an async and a blocking variant of the send-Method(),
      # and the sendAsync-Method returns a completable future, which we can´t 
      # use to get the reponse-data from, we create a new Span, 
      # when code reads the HttpResponse.statusCode()-method.
      r_java_http_response_status_tracing':
        default-rule: true
        include:
          'r_java_http_response_extract_status': true
          'r_http_tracing_span_name_default': true
          'r_http_client_tracing_default_attributes': true  
        scopes:
          's_http_response_statusCode': true
        tracing:
          start-span: true
          auto-tracing: false
          kind: CLIENT
          start-span-conditions:
            only-if-true: 'http_is_entry'
          error-status: 'http_is_error'  